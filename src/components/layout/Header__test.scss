@use '../../styles/utils' as *;

header {
  $color: hsl(var(--color-black));
  color: $color; fill: $color;
  text-wrap: nowrap;
  
  .Logo a{ color: hsl(var(--color-primary)); fill: hsl(var(--color-primary)); &:hover{ color: hsla(var(--color-primary), 0.8); fill: hsla(var(--color-primary), 0.8); } }
  
  nav{
    &{
      position: absolute;
      inset-block-start: 100%;
      inset-inline-end: 0.5em;
      
      width: 14em;
      text-align: center;
      border-radius: 0.5em;
      z-index: 2;
      @extend .bg-glass-menu;
    }

    ul{
      padding-block: 0.5em;
      display: flex;
      flex-direction: column;
      justify-content: start;
      align-items: center;
      gap: 0.5em;
      
      overflow: hidden;

      li{
        padding-block: 0.125em;
        width: 80%;
        text-transform: capitalize;
        font-weight: 400;
        border: 0.0625em solid transparent;
        border-radius: 0.25em;
        cursor: pointer;
        @include trans($time: 0.1s);
        
        a{ 
          display: block; width: 100%;
          span{
            position: relative;
            padding-block-end: 0.15em;
            &::after{ 
              content: "";
              position: absolute;
              inset-inline-start: 0;
              inset-block-end: 0;
              width: 0; height: 0.0625em; background-color: $color;
              @include trans($time: 0.5s);
            }
          }
        }
        &:has( a.active){
          color: hsl(var(--color-primary)); fill: hsl(var(--color-primary));
          font-weight: 500;
          a span::after{ width: 100%; background-color: hsl(var(--color-primary)); }
        }

        &:hover{ 
          $c: var(--color-white);
          $ac: var(--color-secondary);
          @extend .bg-glass-menu;
          &:not(:has( a.active)){ color: hsla( $c, 0.8); fill: hsla( $c, 0.8); a span::after{ width: 100%; background-color: hsl( $c ); }}
          &:has( a.active){ color: hsl( $ac ); fill: hsl( $ac ); a span::after{ width: 100%; background-color: hsl( $ac ); }}
        }
      }
    }

    @media (0 < width < 48rem) { // width <= sm
      &{
        padding: 0.3em;

        ul{
          max-height: calc(100vh - 5em);
          overflow-y: auto;
        }
      }
    }
  }

  .btn__toggle_menu{ @include btn(hsl(var(--color-white)), hsla(var(--color-white), 0.4), hsl(var(--color-primary)), hsla(var(--color-primary), 0.8)); }
  .btn__login, .btn__register{ @include btn(hsl(var(--color-black)), hsla(var(--color-black), 0.4), hsl(var(--color-gray)), hsla(var(--color-gray), 0.8)); }

  
  /// Media Queries Responsive
    @media (width > 768px) {// width > sm
      nav{
        &{
          position: initial;
          width: auto;
          @include un-bg-glass;
        }
    
        ul{
          padding-block: 0;
          flex-direction: row;
          gap: 0.8em;

          li{
            padding-block: 0;
            border: 0 solid transparent;
            @include un-bg-glass;

            
            a{ 
              span{
                &::after{ 
                  content: "";
                  position: absolute;
                  inset-inline-start: 0;
                  inset-block-end: 0;
                  width: 0; height: 0.0625em; background-color: $color;
                  @include trans($time: 0.5s);
                }
              }
            }
            &:has( a.active){
              color: hsl(var(--color-primary)); fill: hsl(var(--color-primary));
              font-weight: 500;
              a span::after{ width: 100%; background-color: hsl(var(--color-primary)); }
            }
    
            &:hover{ 
              $c: var(--color-black);
              $ac: var(--color-secondary);
              @include un-bg-glass;
              &:not(:has( a.active)){ color: hsla( $c, 0.8); fill: hsla( $c, 0.8); a span::after{ background-color: hsl( $c ); }}
              &:has( a.active){ color: hsl( $ac ); fill: hsl( $ac ); a span::after{ background-color: hsl( $ac ); }}
            }
          }
        }
      }
      
    }
}

